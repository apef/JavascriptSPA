(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(i){if(i.ep)return;i.ep=!0;const n=t(i);fetch(i.href,n)}})();const L=document.getElementById("taskbar");class w{constructor(e=void 0,t=void 0){this.icon=null,this.start=null,this.dragArea=null,this.title=null,this.header=null,this.menubar=null,this.dropdownMenu=null,this.main=null,this.footer=null,this.base=null,this.defaultIcon="../img/tempWindowBaseIcon.png";const s=document.querySelector("main");this.dragArea=s,s.addEventListener("dragover",i=>{i.preventDefault()}),s.addEventListener("drop",i=>{if(this.base.classList.contains("active")){const n=JSON.parse(i.dataTransfer.getData("application/json")),o=this.base,r=i.clientX,a=i.clientY;o.style.left=r+n.posX+"px",o.style.top=a+n.posY+"px"}}),this.init(e,t)}init(e,t){this.createWindowHeader(e,t),this.createWindowMenuBar(),this.createWindowMain(),this.createWindowFooter(),this.createWindowBase(),this.dragArea.appendChild(this.base)}createWindowFooter(){this.footer=document.createElement("div"),this.footer.className="windowFooter"}createWindowMenuBar(){this.menubar=document.createElement("div"),this.menubar.setAttribute("id","windowMenuBar")}createWindowBase(){this.base=document.createElement("div"),this.base.setAttribute("id","item"),this.base.classList.add("item"),this.base.addEventListener("click",e=>{this.focusNewWindow(this)}),this.base.setAttribute("draggable","false"),this.base.appendChild(this.header),this.base.appendChild(this.menubar),this.base.appendChild(this.main),this.base.appendChild(this.footer)}createWindowHeader(e=void 0,t=void 0){e!==void 0?this.title=e:this.title="Window",this.header=document.createElement("div"),this.header.classList.add("windowHeader"),this.header.setAttribute("draggable","true"),this.header.addEventListener("dragstart",d=>{d.dataTransfer.dropEffect="move";const h=window.getComputedStyle(this.base,null),p=parseInt(h.getPropertyValue("left"),10)-d.clientX,u=parseInt(h.getPropertyValue("top"),10)-d.clientY,C={posX:p,posY:u};d.dataTransfer.setData("application/json",JSON.stringify(C)),this.focusNewWindow(this)}),this.icon=document.createElement("img"),this.icon.classList.add("icon"),t!==void 0?this.icon.src=t:this.icon.src=this.defaultIcon,this.icon.addEventListener("click",d=>{this.base.classList.contains("minimizing")&&this.base.classList.remove("minimizing"),this.focusNewWindow(this)}),L.appendChild(this.icon);const s=document.createElement("div");s.classList.add("headerButtons"),this.exitButton=document.createElement("button"),this.exitButton.classList.add("windowCloseButton");const i=document.createElement("span");i.setAttribute("id","windowExitButtonIcon"),i.textContent="X",this.exitButton.appendChild(i),this.exitButton.addEventListener("click",d=>{this.base.remove(),L.removeChild(this.icon)});const n=document.createElement("button");n.classList.add("windowMinimizeButton");const o=document.createElement("span");o.setAttribute("id","windowMinimizeButtonIcon"),o.textContent="-",n.appendChild(o),n.addEventListener("click",d=>{this.base.classList.add("minimizing")}),s.appendChild(n),s.appendChild(this.exitButton),this.header.appendChild(s);const r=document.createElement("div");r.setAttribute("id","windowTitleBox");const a=this.icon.cloneNode(!0);a.setAttribute("id","windowTitleIcon"),r.appendChild(a);const l=document.createElement("span");l.setAttribute("id","windowTitle"),l.textContent=this.title,r.appendChild(l),this.header.appendChild(r)}createWindowMain(){this.main=document.createElement("div"),this.main.classList.add("windowMain")}focusNewWindow(){document.querySelector(".active")&&document.querySelector(".active").classList.remove("active"),L.querySelectorAll("#taskbar .icon").forEach(t=>t.classList.remove("active")),this.base.classList.add("active"),this.icon.classList.add("active")}createMenu(){const e=document.createElement("div");e.className="dropdownMenu",e.classList.add("hidden");const t=document.createElement("div");t.className="menuItem";const s=document.createElement("button");return s.className="menuButton",s.textContent="Menu",s.addEventListener("click",i=>{e.classList.contains("hidden")?e.classList.remove("hidden"):e.classList.add("hidden")}),t.appendChild(s),t.appendChild(e),this.menubar.appendChild(t),e}createDropdownItem(e,t="",s="",i,n=!0){const o=document.createElement("button");o.textContent=t,o.classList.add("dropdownItem"),e.appendChild(o),n?o.addEventListener("click",()=>{const r=e.querySelectorAll(".dropdownItem");r.forEach(u=>{u.classList.add("hidden")});const a=document.createElement("div");a.setAttribute("id","menuItemChangeBox");const l=document.createElement("input");l.type="text",l.setAttribute("placeholder",s);const d=document.createElement("div");d.className="rowFlex";const h=document.createElement("button");h.textContent="Confirm";const p=document.createElement("button");p.textContent="Cancel",d.appendChild(p),d.appendChild(h),a.appendChild(l),a.appendChild(d),e.appendChild(a),h.addEventListener("click",()=>{const u=l.value;o.classList.remove("hidden"),a.remove(),r.forEach(C=>{C.classList.remove("hidden")}),i(u)}),p.addEventListener("click",()=>{a.remove(),r.forEach(u=>{u.classList.remove("hidden")}),o.classList.remove("hidden")})}):(o.textContent=t,o.addEventListener("click",()=>{i()}))}}function f(c){c=new TextEncoder().encode(c);let e="";for(const t of c)e+=String.fromCharCode(t+1);return e=btoa(e),e}function g(c){let e="";if(c){c=atob(c);const t=new Uint8Array(c.length);for(let s=0;s<c.length;s++)t[s]=c.charCodeAt(s)-1;e=new TextDecoder().decode(t)}return e}const m=window.localStorage;class x extends w{constructor(){super("Chat","/img/ChatAppLogo.png"),this.connectUrl=null,this.channel=null,this.websocket=null,this.localUpdates=!1,this.connectionIntervalDuration=100,this.connectionTimeoutDuration=1e4,this.emojiList=["😎","🙃","🙂","🤔","😢","👍"," 👈","👋"],this.broadcastChannel="broadcast",this.sendKey="Enter",this.encryptedChannelStr="encryptedChannel",this.exitButton.addEventListener("click",s=>this.closeWebSocket(this))}createWindow(){const e=g(m.getItem("username"));this.connectUrl=g(m.getItem("serverURL")),this.channel=g(m.getItem("serverChannel")),e?(this.connectWebSocket(this),this.displayChatScreen(this)):this.displayLoginScreen(this)}sendMessage(e){if(e){const t={type:"message",data:this.channel===this.encryptedChannelStr?f(e):e,username:g(m.getItem("username")),channel:this.channel,key:g(m.getItem("serverKey"))},s=JSON.stringify(t);this.websocket.send(s),this.localUpdates&&this.updateChatLog(s)}}isJSON(e){let t=!1;try{e=JSON.parse(e),t=!0}catch{console.log("Exception when parsing JSON")}return[t,e]}updateChatLog(e){const t=this.main.querySelector("#chatLogBox"),s=document.createElement("div"),[i,n]=this.isJSON(e);if(i){if((n.channel===this.channel||this.channel===this.broadcastChannel)&&e.type!=="heartbeat"){const o=n.channel===this.encryptedChannelStr&&this.channel===this.encryptedChannelStr?g(n.data):n.data,r=document.createElement("div");r.className="chatUsernameBox",r.classList.add("rowFlex");const a=document.createElement("p");a.textContent=n.username;const l=document.createElement("span"),d=this.getTimeStamp();l.textContent=d,r.appendChild(a),r.appendChild(l);const h=document.createElement("div");h.className="chatContent",h.textContent=o,s.appendChild(r),s.appendChild(h)}}else s.textContent=n;s.classList.add("chatMessage"),t.appendChild(s),t.scrollTop=t.scrollHeight,this.storeChatLog(e)}restoreChatLog(){JSON.parse(m.getItem("chatLog")).forEach(t=>{this.updateChatLog(t)})}storeChatLog(e){let t=JSON.parse(m.getItem("chatLog"));t||(t=[]),t.length>20&&t.shift(),t.push(e),m.setItem("chatLog",JSON.stringify(t))}getTimeStamp(){const e=new Date,t=String(e.getHours()).padStart(2,"0"),s=String(e.getMinutes()).padStart(2,"0");return`${t}: ${s}`}recieveMessage(e){const t=e.data;this.updateChatLog(t)}connectWebSocket(){const e=g(m.getItem("serverURL"));this.websocket=new WebSocket(e),this.websocket.onmessage=t=>this.recieveMessage(t)}closeWebSocket(){if(this.websocket!=null){try{this.websocket.send("Client has closed its connection")}catch{console.log("Websocket exception occured")}this.websocket.close(),this.websocket=null}else console.log("No websocket to close")}displayChatScreen(){this.generateSettingsBox(),this.generateChatMain(),this.setChatFooter()}generateSettingsBox(){const e=this.createMenu();this.createDropdownItem(e,"Change Username","Enter new username..",t=>{if(t){this.username=t;const s=f(t);m.setItem("username",s)}}),this.createDropdownItem(e,"Change Webserver","Enter new URL..",t=>{if(t){this.connectUrl=t;const s=f(t);m.setItem("serverURL",s),this.closeWebSocket(),this.connectWebSocket(),this.setChatFooter()}}),this.createDropdownItem(e,"Change Channel","Enter a new channel",t=>{if(t){this.channel=t;const s=f(t);m.setItem("serverChannel",s),this.setChatFooter()}}),this.createDropdownItem(e,"Toggle local updates","",()=>{this.localUpdates?this.localUpdates=!1:this.localUpdates=!0},!1),this.createDropdownItem(e,"Restore previous session","",()=>{this.restoreChatLog()},!1)}generateChatMain(){const e=document.createElement("div");e.setAttribute("id","chatSection");const t=document.createElement("div");t.setAttribute("id","chatLogBox"),t.style.overflowY="auto";const s=document.createElement("div");s.className="inputControlsBox";const i=document.createElement("input");i.setAttribute("id","chatUserMessageInput"),i.setAttribute("placeholder","..."),i.addEventListener("keydown",r=>{if(r.key===this.sendKey){const a=i.value;this.sendMessage(a)}});const n=document.createElement("button");n.setAttribute("id","chatSendBtn"),n.textContent="Send",n.addEventListener("click",r=>{const a=i.value;this.sendMessage(a)});const o=document.createElement("button");o.textContent="😎",o.addEventListener("click",r=>{o.textContent="";const a=document.createElement("div");a.className="grid",this.emojiList.forEach(l=>{const d=document.createElement("div");d.className="emoji",d.textContent=l,d.addEventListener("click",h=>{i.value=i.value+l}),a.appendChild(d)}),o.appendChild(a),a.addEventListener("mouseleave",l=>{o.textContent="😎",a.remove()})}),s.appendChild(i),s.appendChild(o),s.appendChild(n),e.appendChild(t),e.appendChild(s),this.main.appendChild(e)}setChatFooter(){this.footer.innerHTML="";const e=document.createElement("div");e.className="footerTextBox";const t=document.createElement("span"),s=document.createElement("span");t.textContent=`Connecting to webserver: ${this.connectUrl}`;let i=0;const n=setInterval(()=>{this.websocket.readyState===this.websocket.OPEN?(clearInterval(n),t.textContent=`Connected to webserver: ${this.connectUrl}`,s.textContent=`Using channel: ${this.channel}`):i>=this.connectionTimeoutDuration&&(clearInterval(n),t.textContent=`A connection could not be established to webserver: ${this.connectUrl}`),i+=this.connectionIntervalDuration},this.connectionIntervalDuration);e.appendChild(t),e.appendChild(s),this.footer.appendChild(e)}displayLoginScreen(){const e=document.createElement("div");e.classList.add("loginScreenBox");const t=document.createElement("h1");t.textContent="Welcome to the chatroom!";const s=document.createElement("h3");s.textContent="Please enter your username";const i=document.createElement("input");i.setAttribute("placeholder","Username"),i.setAttribute("id","setUsernameTextBox");const n=document.createElement("input");n.setAttribute("id","setServerTextBox"),n.setAttribute("placeholder","Server URL");const o=document.createElement("input");o.setAttribute("placeholder","key");const r=document.createElement("button");r.setAttribute("id","chatLoginButton"),r.appendChild(document.createTextNode("Login"));const a=document.createElement("div");a.appendChild(document.createTextNode("Please enter username and server URL")),a.classList.add("hidden"),r.addEventListener("click",l=>{const d=i.value,h=n.value,p=o.value;if(d===""||h===""||p==="")a.classList.contains("hidden")&&a.classList.remove("hidden"),e.appendChild(a);else{const u=f(d),C=f(p),b=f(h);m.setItem("username",u),m.setItem("serverURL",b),m.setItem("serverKey",C),e.remove(),this.createWindow()}}),e.appendChild(t),e.appendChild(s),e.appendChild(i),e.appendChild(n),e.appendChild(o),e.appendChild(r),e.appendChild(a),this.main.appendChild(e)}}class A{constructor(e){this.currentTime=0,this.outputElement=e,this.timer=null}start(){const e=new Date().getTime()/1e3;return this.timer=setInterval(()=>{const t=Math.round(new Date().getTime()/1e3-e);this.currentTime=t,this.outputElement.innerHTML=`Time taken: ${t} seconds`},1e3),this.timer}stop(){clearInterval(this.gameTimer)}getCurrentDuration(){return this.currentTime}}class v{constructor(e,t){this.list=null,this.maxListedPlayers=e,this.descending=t,this.initList()}initList(){const e=JSON.parse(window.localStorage.getItem("highscoreList"));e!==null?this.list=e:this.list=[]}filterHighscores(e,t){let s=JSON.parse(window.localStorage.getItem("highscoreList"));return e!==""&&(t?s=e?s.filter(i=>i.application!==e):s:s=e?s.filter(i=>i.application===e):s),s}clearHighscores(e){const t=this.filterHighscores(e,!0);window.localStorage.setItem("highscoreList",JSON.stringify(t))}addEntry(e){let t=this.list;if(t=e.application?t.filter(s=>s.application===e.application):t,t=Object.entries(t),t.length<this.maxListedPlayers)this.list.push(e);else{const s=t[t.length-1][1];(!this.descending&&s.score>e.score||this.descending&&s.score<e.score)&&(this.list.pop(),this.list.push(e))}this.sortList(),window.localStorage.setItem("highscoreList",JSON.stringify(this.list))}sortList(){if(this.list.length>1){let e=null;this.descending?e=-1:e=1,this.list.sort((t,s)=>(t.score-s.score)*e)}}getDisplayHighScoreElement(e=""){const t="No scores set yet",s=document.createElement("table"),i=this.filterHighscores(e,!1);if(i&&i.length>0){const n=Object.keys(i[0]),o=this.createRow(n,"th","application");s.appendChild(o),i.forEach(r=>{const a=Object.values(r),l=this.createRow(a,"td",e);s.appendChild(l)})}else{const n=document.createElement("tr").appendChild(document.createTextNode(t));s.appendChild(n)}return s}createRow(e,t,s){const i=document.createElement("tr");return e.forEach(n=>{if(n!==s){const o=this.createCell(t,n);i.appendChild(o)}}),i}createCell(e,t){const s=document.createElement(e),i=document.createTextNode(t);return s.appendChild(i),s}getList(){return this.list}createHighScoreArea(e,t){e.main.innerHTML="",e.footer.innerHTML="";const s=document.createElement("div");s.className="highScoreArea";const i=document.createElement("h1");i.textContent="Highscores",s.appendChild(i),this.addEntry(t);const n=this.getDisplayHighScoreElement(t.application);s.appendChild(n);const o=document.createElement("button");o.textContent="Retry",o.addEventListener("click",r=>{s.remove(),e.createWindow(!0)}),s.appendChild(o),e.main.appendChild(s)}}function y(c){return Math.floor(Math.random()*c)}function I(c){for(let e=c.length-1;e>0;e--){const t=y(e+1),s=c[e];c[e]=c[t],c[t]=s}return c}class k extends w{constructor(){super("Memory","/img/MemoryAppLogo.png"),this.playArea=null,this.scoreArea=null,this.uniqueCardAmount=9,this.activeCard=null,this.highlightedCard=null,this.cards=null,this.wait=!1,this.gameTimer=null,this.highscorePlayerLimit=5,this.amountPairsTextElement=null,this.tempUsername="MemoryPlayer",this.cardImages={0:"/img/MemoryApplication/0.png",1:"/img/MemoryApplication/1.png",2:"/img/MemoryApplication/2.png",3:"/img/MemoryApplication/3.png",4:"/img/MemoryApplication/4.png",5:"/img/MemoryApplication/5.png",6:"/img/MemoryApplication/6.png",7:"/img/MemoryApplication/7.png",8:"/img/MemoryApplication/8.png",played:"/img/MemoryApplication/played.png"},this.exitButton.addEventListener("click",s=>{this.gameTimer&&this.gameTimer.stop()})}createWindow(e=!1){e||(this.createSettingsMenu(),this.base.setAttribute("tabindex",0),this.base.focus(),this.base.addEventListener("keydown",t=>{this.keyboardMoveTile(t.key)})),this.playArea=document.createElement("div"),this.playArea.setAttribute("id","memoryPlayArea"),this.main.appendChild(this.playArea),this.createScoreArea(),this.initializeGame()}revealCards(){const e=this.getTiles(!1);e.forEach(t=>{t.src=this.cardImages[this.cards[t.id]]}),setTimeout(()=>{e.forEach(t=>{t.src=this.cardImages[0]}),this.activeCard&&(this.activeCard.src=this.cardImages[this.cards[this.activeCard.id]])},1e3)}createSettingsMenu(){const e=this.createMenu();this.createDropdownItem(e,"Reveal cards","",()=>{this.revealCards()},!1),this.createDropdownItem(e,"Delete Highscores","",()=>{new v().clearHighscores("memory")},!1)}getTiles(e){let t=Array.from(this.playArea.querySelectorAll(".MemoryCard"));return e?t=t.filter(s=>s.src.includes("played.png")):t=t.filter(s=>!s.src.includes("played.png")),t}keyboardMoveTile(e){const t=Array.from(this.playArea.querySelectorAll(".MemoryCard"));this.highlightedCard||(this.highlightedCard=t[0]),this.highlightedCard.classList.add("selectedCard");let s=parseInt(this.highlightedCard.id),i=null;switch(e){case"ArrowLeft":s=s-1;break;case"ArrowRight":s=s+1;break;case"ArrowUp":s=s-4;break;case"ArrowDown":s=s+4;break;case"Enter":this.checkPairs(this.highlightedCard),this.activeCard=this.highlightedCard;break}s>=0&&s<t.length&&(i=t[s],i&&(this.highlightedCard.classList.remove("selectedCard"),this.highlightedCard=i,this.highlightedCard.classList.add("selectedCard")))}checkPairs(e){if(!this.wait&&!e.src.includes("played.png"))if(e.src=this.cardImages[this.cards[e.id]],this.activeCard!=null){const t=this.activeCard;t!==e&&(this.wait=!0,setTimeout(()=>{this.cards[t.id]===this.cards[e.id]?(e.src=this.cardImages.played,t.src=this.cardImages.played):(t.src=this.cardImages[0],e.src=this.cardImages[0]),this.wait=!1,this.activeCard=null,this.checkGameOver()},1e3))}else this.activeCard=e}createCard(e){const t=document.createElement("img");t.classList.add("MemoryCard"),t.setAttribute("id",e),t.src=this.cardImages[0],this.playArea.appendChild(t),t.addEventListener("click",s=>{this.checkPairs(t)})}initializeGame(){const e=[];for(let t=1;t<this.uniqueCardAmount;t++)e.push(t,t);for(let t=0;t<e.length;t++)this.createCard(t);this.cards=I(e)}createScoreArea(){this.scoreArea=document.createElement("div"),this.scoreArea.className="memoryScoreArea",this.footer.appendChild(this.scoreArea);const e=document.createElement("p");this.gameTimer=new A(e),this.scoreArea.append(e),this.amountPairsTextElement=document.createElement("p"),this.scoreArea.appendChild(this.amountPairsTextElement),this.gameTimer.start()}checkGameOver(){const e=this.getTiles(!0);e.length>=this.cards.length?(this.gameTimer.stop(),this.playArea.remove(),this.scoreArea.remove(),this.displayHighscores()):this.amountPairsTextElement.textContent=`Pairs: ${e.length/2}`}displayHighscores(){const e=new v(this.highscorePlayerLimit,!1),t=this.gameTimer.getCurrentDuration();let s=g(localStorage.getItem("username"));s||(s=this.tempUsername);const i={username:s,score:t,application:"memory"};e.createHighScoreArea(this,i)}}class B extends w{constructor(){super("Snake","/img/SnakeAppLogo.png"),this.gameBoard=null,this.gridSize=20,this.gameArea=null,this.gameInterval=null,this.highscorePlayerLimit=5,this.dropdownMenu=null,this.twoplayermode=!1,this.endlessMode=!1,this.foodID=3,this.snakeplayer1ID=1,this.snakeplayer2ID=2,this.directions={up:{x:-1,y:0},down:{x:1,y:0},left:{x:0,y:-1},right:{x:0,y:1}}}createWindow(){this.menubar.innerHTML="",this.dropdownMenu=this.createMenu(),this.createDropdownItem(this.dropdownMenu,"Delete Highscores","",()=>{new v().clearHighscores("snake")},!1),this.displayWelcomeScreen()}displayChooseMode(){const e="Game Modes",t="Select mode",s="Traditional",i="Endless",n=()=>{this.displayControlScheme()},o=()=>{this.endlessMode=!0,this.displayControlScheme()};this.displaySimpleMenuScreen(e,t,s,i,n,o,!0)}displayWelcomeScreen(){const e="Snake",t="Select mode",s="1 Player",i="2 Players",n=()=>{this.displayChooseMode()},o=()=>{this.twoplayermode=!0,this.displayChooseMode()};this.displaySimpleMenuScreen(e,t,s,i,n,o,!0)}displayControlScheme(){this.displaySimpleMenuScreen("Controls","Player 1 moves with arrow keys. Player 2 moves with WASD","","","","",!1),setTimeout(()=>{this.initGame()},3e3)}displaySimpleMenuScreen(e,t,s,i,n,o,r=!1){this.main.innerHTML="";const a=document.createElement("div");a.className="SnakeGameMenuBox";const l=document.createElement("h1");l.textContent=e;const d=document.createElement("p");if(d.textContent=t,a.appendChild(l),a.appendChild(d),r){const h=document.createElement("button"),p=document.createElement("button");h.textContent=s,p.textContent=i,h.addEventListener("click",u=>{n()}),p.addEventListener("click",u=>{o()}),a.appendChild(h),a.appendChild(p)}this.main.appendChild(a)}update(e){e.base.classList.contains("active")&&(e.drawScoreBoard(),e.moveSnake(),e.drawBoard())}drawBoard(){this.gameArea.innerHTML="";for(let e=0;e<this.gridSize;e++)for(let t=0;t<this.gridSize;t++){const s=document.createElement("div");s.className="cell",this.gameBoard[e][t]===1&&(s.className="player1snake"),this.gameBoard[e][t]===2&&(s.className="player2snake"),this.gameBoard[e][t]===3&&(s.className="food"),this.gameArea.appendChild(s)}}drawScoreBoard(){if(this.twoplayermode){const e=[];this.snakes.forEach(t=>{e.push(t.head.length)}),this.footer.innerHTML=`Player1 score: ${e[0]-1} Player2 score: ${e[1]-1}`}else{const e=this.snakes[0];this.footer.innerHTML=`Score: ${e.head.length-1}`}}endGame(){clearInterval(this.gameInterval);const e=new v(this.highscorePlayerLimit,!0);this.snakes.forEach(t=>{const s=t.head.length,i=t.id;e.createHighScoreArea(this,{username:`snakePlayer${i}`,score:s,application:"snake"})})}initGame(){this.createDropdownItem(this.dropdownMenu,"End session","",()=>{this.endGame()},!1),this.main.innerHTML="",this.gameBoard=Array.from({length:this.gridSize},()=>Array(this.gridSize).fill(0)),this.gameArea=document.createElement("div"),this.gameArea.className="SnakeGameArea",this.twoplayermode?this.snakes=[this.createSnake(this.snakeplayer1ID),this.createSnake(this.snakeplayer2ID)]:this.snakes=[this.createSnake(this.snakeplayer1ID)],this.base.setAttribute("tabindex",0),this.base.focus(),this.base.addEventListener("keydown",e=>{this.changeDirection(e.key)}),this.main.appendChild(this.gameArea),this.gameInterval=setInterval(()=>this.update(this),200),this.exitButton.addEventListener("click",e=>{clearInterval(this.gameInterval)}),this.spawnFood(),this.drawBoard()}changeDirection(e){const t={ArrowUp:0,ArrowDown:0,ArrowLeft:0,ArrowRight:0,w:1,s:1,a:1,d:1},s=this.snakes[t[e]];let i=null;if(s){switch(e){case"w":case"ArrowUp":i=this.directions.up;break;case"s":case"ArrowDown":i=this.directions.down;break;case"a":case"ArrowLeft":i=this.directions.left;break;case"d":case"ArrowRight":i=this.directions.right;break;default:i=s.direction;break}s.direction.x+i.x!==0&&(s.direction=i)}}getSpawnPoint(e,t=0){const s=y(e)+t,i=y(e)+t;return{x:s,y:i}}spawnFood(){let e=!0;if(this.snakes.forEach(t=>{t.head.length===this.gridSize-1&&(e=!1)}),e){for(this.currentFoodLocation=this.getSpawnPoint(this.gridSize-1);this.gameBoard[this.currentFoodLocation.x][this.currentFoodLocation.y]===this.snakeplayer1ID||this.gameBoard[this.currentFoodLocation.x][this.currentFoodLocation.y]===this.snakeplayer2ID;)this.spawnFood();this.gameBoard[this.currentFoodLocation.x][this.currentFoodLocation.y]=this.foodID}}createSnake(e){const t=this.getSpawnPoint(10,5),s=Object.keys(this.directions),i=this.directions[s[y(s.length)]];return{head:[t],id:e,direction:i}}resetSnake(e){e.head.forEach(t=>{this.gameBoard[t.x][t.y]=0}),e.head=[]}detectCollision(e){const t=e.head[0];t.x<0?t.x=this.gridSize-1:t.x>=this.gridSize&&(t.x=0),t.y<0?t.y=this.gridSize-1:t.y>=this.gridSize&&(t.y=0),this.endlessMode?(e.id===this.snakeplayer1ID&&this.gameBoard[t.x][t.y]===this.snakeplayer2ID&&(this.resetSnake(e),this.snakes[0]=this.createSnake(this.snakeplayer1ID)),e.id===this.snakeplayer2ID&&this.gameBoard[t.x][t.y]===this.snakeplayer1ID&&(this.resetSnake(e),this.snakes[1]=this.createSnake(this.snakeplayer2ID))):(this.gameBoard[t.x][t.y]===this.snakeplayer1ID||this.gameBoard[t.x][t.y]===this.snakeplayer2ID)&&this.endGame()}moveSnake(){this.snakes.forEach(e=>{const t=e.head[0],s={x:t.x+e.direction.x,y:t.y+e.direction.y};if(e.head.unshift(s),this.detectCollision(e),e.head.length>0){if(this.gameBoard[s.x][s.y]===this.foodID)this.spawnFood();else{const i=e.head.pop();this.gameBoard[i.x][i.y]=0}e.head.forEach(i=>{this.gameBoard[i.x][i.y]=e.id})}})}}class M extends w{constructor(){super("Paint","/img/PaintAppLogo.png"),this.localStorage=window.localStorage,this.grid=null,this.colorsArea=null,this.gridSize=20,this.selectedColor=2,this.isMouseDown=!1,this.colors={0:"white",1:"black",2:"red",3:"blue",4:"green",5:"yellow",6:"purple",7:"pink",8:"brown",9:"gray",10:"silver",11:"gold"}}createWindow(){this.main.addEventListener("mousedown",()=>{this.isMouseDown=!0}),this.main.addEventListener("mouseup",()=>{this.isMouseDown=!1}),this.createSettingsMenu(),this.initGrid(),this.createSelectColorArea()}createSettingsMenu(){this.paintSectionWrapper=document.createElement("div"),this.paintSectionWrapper.className="paintSection";const e=this.createMenu();this.createDropdownItem(e,"Save Image","",()=>{this.displayPopupWindow("Save Image")},!1),this.createDropdownItem(e,"Load Image","",()=>{this.loadImage()},!1),this.createDropdownItem(e,"Clear grid","",()=>{this.grid=null,this.initGrid()},!1)}displayPopupWindow(e,t=null){const s=document.createElement("div");s.className="popUp";const i=document.createElement("h2");i.textContent=e,s.appendChild(i);const n=document.createElement("div");if(n.className="rowFlex",t){const r=document.createElement("div");r.className="popUpImageButtons",t.forEach(a=>{const l=document.createElement("button");l.textContent=a.name,l.addEventListener("click",d=>{this.grid=a.grid,s.remove(),this.initGrid()}),r.appendChild(l)}),s.appendChild(r)}else{const r=document.createElement("input");r.setAttribute("placeholder","Enter a name");const a=document.createElement("button");a.textContent="Confirm",a.addEventListener("click",()=>{const l=r.value;l!==""&&(this.saveImage(l),s.remove())}),s.appendChild(r),n.appendChild(a)}const o=document.createElement("button");o.textContent="Cancel",o.addEventListener("click",r=>{s.remove()}),n.appendChild(o),s.appendChild(n),this.main.appendChild(s)}loadImage(){const e=JSON.parse(this.localStorage.getItem("savedImages"));e&&this.displayPopupWindow("Load Image",e)}saveImage(e){let t=JSON.parse(this.localStorage.getItem("savedImages"));t||(t=[]);const s={name:e,grid:this.grid};t.push(s),this.localStorage.setItem("savedImages",JSON.stringify(t))}initGrid(){this.main.innerHTML="",this.paintArea=document.createElement("div"),this.paintArea.className="paintGrid",this.paintArea.addEventListener("dragstart",e=>{e.preventDefault()}),this.grid||(this.grid=Array.from({length:this.gridSize},()=>Array(this.gridSize).fill(0)));for(let e=0;e<this.gridSize;e++)for(let t=0;t<this.gridSize;t++){const s=this.grid[e][t],i={posY:e,posX:t},n=this.createCell(this.colors[s],()=>{this.setCellColor(n,i)});n.addEventListener("mouseover",o=>{this.isMouseDown&&this.setCellColor(n,i)}),this.paintArea.appendChild(n)}this.main.appendChild(this.paintArea)}setCellColor(e,t){e.style.background=this.colors[this.selectedColor],this.grid[t.posY][t.posX]=this.selectedColor}createCell(e,t){const s=document.createElement("div");return s.className="colorCell",s.style.background=`${e}`,s.addEventListener("click",i=>{t()}),s}createSelectColorArea(){this.footer.innerHTML="",this.colorsArea=document.createElement("div"),this.colorsArea.className="colorsArea";const e=Object.keys(this.colors),t=Array.from({length:e.length},()=>Array(e.length).fill(0));for(let s=0;s<t.length;s++){const i=this.colors[s],n=this.createCell(i,()=>{const o=n.style.background,r=Object.keys(this.colors).find(a=>this.colors[a]===o);this.selectedColor=r});this.colorsArea.appendChild(n)}this.footer.appendChild(this.colorsArea)}}const S="/img/DesktopPicture.jpg",T=document.querySelector("main");T.style.backgroundImage=`url(${S})`;const D=document.getElementById("ChatWindowGenerator");D.addEventListener("click",c=>{new x().createWindow()});const N=document.getElementById("MemoryWindowGenerator");N.addEventListener("click",c=>{new k().createWindow()});const P=document.getElementById("SnakeWindowGenerator");P.addEventListener("click",c=>{new B().createWindow()});const W=document.getElementById("PaintWindowGenerator");W.addEventListener("click",c=>{new M().createWindow()});const E=window.localStorage;H();const U=document.querySelector("main");U.style.backgroundImage=S;function H(){E.getItem("chatLog")==null&&E.setItem("chatLog",JSON.stringify([]))}
